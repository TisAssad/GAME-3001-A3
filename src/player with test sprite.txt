#include "Player.h"
#include "TextureManager.h"

Player::Player(): m_currentAnimationState(PlayerAnimationState::PLAYER_IDLE_RIGHT)
{
	TextureManager::Instance().LoadSpriteSheet(
		"../Assets/sprites/ness_spritesheet.txt",
		"../Assets/sprites/ness_spritesheet.png", 
		"spritesheet");

	SetSpriteSheet(TextureManager::Instance().GetSpriteSheet("spritesheet"));
	
	// set frame width
	SetWidth(16);

	// set frame height
	SetHeight(24);

	GetTransform()->position = glm::vec2(400.0f, 300.0f);
	GetRigidBody()->velocity = glm::vec2(0.0f, 0.0f);
	GetRigidBody()->acceleration = glm::vec2(0.0f, 0.0f);
	GetRigidBody()->isColliding = false;
	SetType(GameObjectType::PLAYER);

	BuildAnimations();
}

Player::~Player()
= default;

void Player::Draw()
{
	// alias for x and y
	const auto x = static_cast<int>(GetTransform()->position.x);
	const auto y = static_cast<int>(GetTransform()->position.y);

	// draw the player according to animation state
	switch(m_currentAnimationState)
	{
	case PlayerAnimationState::PLAYER_IDLE_DOWN:
		TextureManager::Instance().PlayAnimation("spritesheet", GetAnimation("idleDown"),
			x, y, 0.12f, 0, 255, false);
		break;
	case PlayerAnimationState::PLAYER_IDLE_LEFT:
		TextureManager::Instance().PlayAnimation("spritesheet", GetAnimation("idleLeft"),
			x, y, 0.12f, 0, 255, false);
		break;
	case PlayerAnimationState::PLAYER_IDLE_UP:
		TextureManager::Instance().PlayAnimation("spritesheet", GetAnimation("idleDown"),
			x, y, 0.12f, 0, 255, false);
	case PlayerAnimationState::PLAYER_IDLE_RIGHT:
		TextureManager::Instance().PlayAnimation("spritesheet", GetAnimation("idleDown"),
			x, y, 0.12f, 0, 255, false);
	case PlayerAnimationState::PLAYER_RUN_RIGHT:
		TextureManager::Instance().PlayAnimation("spritesheet", GetAnimation("idleDown"),
			x, y, 0.25f, 0, 255, false);
		break;
	case PlayerAnimationState::PLAYER_RUN_LEFT:
		TextureManager::Instance().PlayAnimation("spritesheet", GetAnimation("idleDown"),
			x, y, 0.25f, 0, 255, false, SDL_FLIP_HORIZONTAL);
		break;
	default:
		break;
	}
	
}

void Player::Update()
{
	if (m_isPlayerMoving && !GetRigidBody()->isColliding) {
		
		if (GetPlayerDirection() == PlayerDirection::RIGHT) {
			GetRigidBody()->velocity = glm::vec2(5.0f, 0.0f);
		}
		else if (GetPlayerDirection() == PlayerDirection::LEFT) {
			GetRigidBody()->velocity = glm::vec2(-5.0f, 0.0f);
		}
		else if (GetPlayerDirection() == PlayerDirection::UP) {
			GetRigidBody()->velocity = glm::vec2(0.0f, -5.0f);
		}
		else if (GetPlayerDirection() == PlayerDirection::DOWN) {
			GetRigidBody()->velocity = glm::vec2(0.0f, 5.0f);
		}
	}

	GetTransform()->position += GetRigidBody()->velocity;
}

void Player::Clean()
{
}

void Player::SetAnimationState(const PlayerAnimationState new_state)
{
	m_currentAnimationState = new_state;
}

void Player::SetPlayerDirection(PlayerDirection newDirection)
{
	m_currentDirection = newDirection;
}

void Player::SetMovement(bool isMoving)
{
	m_isPlayerMoving = isMoving;
}

PlayerDirection Player::GetPlayerDirection()
{
	return m_currentDirection;
}

bool Player::GetMovement()
{
	return m_isPlayerMoving;
}

void Player::BuildAnimations()
{
	auto idleDown_animation = Animation();

	idleDown_animation.name = "idleDown";
	idleDown_animation.frames.push_back(GetSpriteSheet()->GetFrame("ness-idle-0"));
	SetAnimation(idleDown_animation);

	auto idleLeft_animation = Animation();
	idleLeft_animation.name = "idleLeft";
	idleLeft_animation.frames.push_back(GetSpriteSheet()->GetFrame("ness-idle-1"));
	SetAnimation(idleLeft_animation);

	auto idleUp_animation = Animation();
	idleUp_animation.name = "idleUp";
	idleUp_animation.frames.push_back(GetSpriteSheet()->GetFrame("ness-idle-2"));
	SetAnimation(idleUp_animation);

	auto idleRight_animation = Animation();
	idleRight_animation.name = "idleRight";
	idleRight_animation.frames.push_back(GetSpriteSheet()->GetFrame("ness-idle-3"));
	SetAnimation(idleRight_animation);

	auto run_animation = Animation();

	run_animation.name = "run";
	run_animation.frames.push_back(GetSpriteSheet()->GetFrame("megaman-run-0"));
	/*run_animation.frames.push_back(GetSpriteSheet()->GetFrame("megaman-run-1"));
	run_animation.frames.push_back(GetSpriteSheet()->GetFrame("megaman-run-2"));
	run_animation.frames.push_back(GetSpriteSheet()->GetFrame("megaman-run-3"));*/

	SetAnimation(run_animation);
}
